# Author : lira Sruut
# https://www.github.com/HAXZOR007-Cyber
# Jangan Di Dec File ini
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))